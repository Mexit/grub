From 2623d8eb683de2bf25fc35fcde485adeba6ea4bb Mon Sep 17 00:00:00 2001
From: Thomas Frauendorfer <tf@miray.de>
Date: Mon, 5 May 2014 14:46:52 +0200
Subject: [PATCH 11/41] Activity module

---
 grub-core/Makefile.miray.def   |   4 ++
 grub-core/miray/lib/activity.c | 122 +++++++++++++++++++++++++++++++++++++++++
 include/grub/miray_activity.h  |  49 +++++++++++++++++
 3 files changed, 175 insertions(+)
 create mode 100755 grub-core/miray/lib/activity.c
 create mode 100755 include/grub/miray_activity.h

diff --git a/grub-core/Makefile.miray.def b/grub-core/Makefile.miray.def
index 985baf4..55118c8 100755
--- a/grub-core/Makefile.miray.def
+++ b/grub-core/Makefile.miray.def
@@ -1,2 +1,6 @@
 AutoGen definitions Makefile.tpl;
 
+module = { 
+  name = miray_activity;
+  common = miray/lib/activity.c;
+};
diff --git a/grub-core/miray/lib/activity.c b/grub-core/miray/lib/activity.c
new file mode 100755
index 0000000..c49c768
--- /dev/null
+++ b/grub-core/miray/lib/activity.c
@@ -0,0 +1,122 @@
+/*
+ *  GRUB  --  GRand Unified Bootloader
+ *  Copyright (C) 2010-2014 Miray Software <oss@miray.de>
+ *
+ *  GRUB is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  GRUB is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with GRUB.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+
+#include <grub/miray_activity.h>
+#include <grub/time.h>
+#include <grub/misc.h>
+#include <grub/dl.h>
+#include <grub/mm.h>
+
+GRUB_MOD_LICENSE ("GPLv3+");
+
+// FIXME: draft for now.
+// Only supports tick, and only supports one target
+
+struct miray_activity_hook
+{
+   struct miray_activity_hook * next;
+
+   void (*descr)(void*, const char *);
+   void (*tick)(void*);
+   void *data;
+}; 
+
+static struct miray_activity_hook *hooks = 0;
+
+static int last_tick = 0;
+
+void
+miray_activity_set_description(const char *str __attribute__((__unused__)))
+{	
+  /* Do nothing */
+  //str = 0;  
+}
+
+void
+miray_activity_tick(void)
+{
+   if (hooks == 0)
+      return;
+
+   grub_uint32_t curr_time = grub_get_time_ms(); 
+   if (last_tick + miray_activity_tick_throttle_ms > curr_time)
+      return;
+
+   struct miray_activity_hook * cur;
+   for (cur = hooks; cur != 0; cur = cur->next)
+   {
+      if (cur->tick == 0)
+         continue;
+
+      cur->tick(cur->data);
+   }
+
+   last_tick = curr_time;
+}
+
+void *miray_activity_register_hook (void (*description)(void *data, const char *str), void (*tick)(void *data), void *data)
+{
+   if (description == 0 && tick == 0)
+      return 0;
+
+   {
+      struct miray_activity_hook * cur;
+      for (cur = hooks; cur != 0; cur = cur->next)
+      {
+         if (cur->descr == description && cur->tick == tick && cur->data == data)
+            return cur; /* Already added (CHECK: return 0 instead?) */
+      }
+   }
+   
+   struct miray_activity_hook * new = grub_zalloc(sizeof(struct miray_activity_hook));
+   if (new == 0)
+   {
+      grub_error(GRUB_ERR_OUT_OF_MEMORY, "OUT OF MEMORY");
+      return 0;
+   }
+   
+   new->descr = description;
+   new->tick = tick;
+   new->data = data;
+
+   new->next = hooks;
+   hooks = new;
+
+   return new;
+}
+
+void miray_activity_unregister_hook (void *hnd)
+{
+   struct miray_activity_hook * prev = 0;
+   struct miray_activity_hook * cur;
+   for (cur = hooks; cur != 0; cur = cur->next)
+   {
+      if (cur == hnd)
+      {
+         if (prev != 0)
+            prev->next = cur->next;
+         else
+            hooks = cur->next;
+
+         grub_free(cur);
+         break;
+      }
+      prev = cur;
+   }
+}
diff --git a/include/grub/miray_activity.h b/include/grub/miray_activity.h
new file mode 100755
index 0000000..5f39085
--- /dev/null
+++ b/include/grub/miray_activity.h
@@ -0,0 +1,49 @@
+/* miray_activity.h - enable periodic updates for actions */
+/*
+ *  Extention for GRUB  --  GRand Unified Bootloader
+ *  Copyright (C) 2000,2001,2002,2003,2005,2006,2007,2008,2009  Free Software Foundation, Inc.
+ *  Copyright (C) 2010,2011,2012,2014 Miray Software <oss@miray.de>
+ *
+ *  GRUB is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  GRUB is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with GRUB.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef MIRAY_ACTIVITY_HEADER
+#define MIRAY_ACTIVITY_HEADER 1
+
+#include <grub/types.h>
+#include <grub/err.h>
+
+//#ifdef DISABLE_ACTIVITY
+//# define ACTIVITY_DESCRIPTION(str) do {} while (0)
+//# define ACTIVITY_TICK() do {} while (0)
+//#else
+# define ACTIVITY_DESCRIPTION(str) miray_activity_set_description(str)
+# define ACTIVITY_TICK() miray_activity_tick()
+//#endif
+
+/* minimum pause between calls to tick hooks */
+//static const grub_uint32_t miray_activity_tick_throttle_ms = 50;
+static const grub_uint32_t miray_activity_tick_throttle_ms = 5;
+
+/* Call the register activity hooks */
+void miray_activity_set_description(const char *);
+void EXPORT_FUNC(miray_activity_tick) (void);
+
+/* Register an activity hook */
+/* BEWARE: tick() can happen very ofen, so the handler should be fast */
+void *miray_activity_register_hook (void (*description)(void *data, const char *str), void (*tick)(void *data), void *data); 
+
+void miray_activity_unregister_hook (void *hnd);
+
+#endif
-- 
1.9.2.msysgit.0

